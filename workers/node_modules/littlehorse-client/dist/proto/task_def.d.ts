import _m0 from "protobufjs/minimal";
import { VariableDef } from "./common_wfspec";
import { TaskDefId } from "./object_id";
/** A TaskDef defines a blueprint for a TaskRun that can be dispatched to Task Workers. */
export interface TaskDef {
    /** The ID of this TaskDef. */
    id: TaskDefId | undefined;
    /** The input variables required to execute this TaskDef. */
    inputVars: VariableDef[];
    /** The time at which this TaskDef was created. */
    createdAt: string | undefined;
}
export declare const TaskDef: {
    encode(message: TaskDef, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TaskDef;
    create(base?: DeepPartial<TaskDef>): TaskDef;
    fromPartial(object: DeepPartial<TaskDef>): TaskDef;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
//# sourceMappingURL=task_def.d.ts.map