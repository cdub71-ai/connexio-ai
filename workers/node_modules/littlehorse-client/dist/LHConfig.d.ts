import { Client } from 'nice-grpc';
import { LittleHorseDefinition } from './proto/service';
import { ConfigArgs } from './utils/getPropertiesArgs';
export declare const CONFIG_NAMES: readonly ["LHC_API_HOST", "LHC_API_PORT", "LHC_API_PROTOCOL", "LHC_TENANT_ID", "LHC_CA_CERT"];
export type Config = {
    [key in ConfigName]?: string;
};
export type ConfigName = (typeof CONFIG_NAMES)[number];
export declare class LHConfig {
    private apiHost?;
    private apiPort?;
    private protocol?;
    private tenantId?;
    private caCert?;
    private channel;
    private constructor();
    /**
     * Instantiate LHConfig from properties file
     * @param file - path to properties file
     * @returns LHConfig instance
     */
    static fromConfigFile(file: string): LHConfig;
    static from(args: Partial<ConfigArgs>): LHConfig;
    /**
     * Get gRPC client for littlehorse
     *
     * For more documentation about it's method please go to {@link https://littlehorse.dev}
     *
     * @param options - An object optionally containing `accessToken` and `tenantId`
     * @returns a gRPC client for littlehorse
     */
    getClient(accessToken?: string): Client<typeof LittleHorseDefinition>;
    private getMetadata;
}
//# sourceMappingURL=LHConfig.d.ts.map